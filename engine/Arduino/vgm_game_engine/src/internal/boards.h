#pragma once
#include "Arduino.h"

typedef enum
{
    PICO_GAME_ENGINE_BOARD_TYPE_FLIPPER_VGM,
    PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO,
    PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_2,
    PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_W,
    PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_2W,
} PicoGameEngineBoardType;

#define PICO_GAME_ENGINE_BOARD_TYPE PICO_GAME_ENGINE_BOARD_TYPE_FLIPPER_VGM

#if PICO_GAME_ENGINE_BOARD_TYPE == PICO_GAME_ENGINE_BOARD_TYPE_FLIPPER_VGM
#define PICO_GAME_ENGINE_BOARD_MISO 12
#define PICO_GAME_ENGINE_BOARD_CS 13
#define PICO_GAME_ENGINE_BOARD_SCLK 8
#define PICO_GAME_ENGINE_BOARD_MOSI 11
#define PICO_GAME_ENGINE_BOARD_RST 26
#define PICO_GAME_ENGINE_BOARD_DC 15
#define PICO_GAME_ENGINE_BOARD_HEAP_SIZE 256000
#define PICO_GAME_ENGINE_BOARD_FLASH_SIZE 2000000
#define PICO_GAME_ENGINE_BOARD_HAS_WIFI false
#include <PicoDVI.h>                  // Core display & graphics library
#include <Fonts/FreeSansBold18pt7b.h> // A custom font
/*
static const struct dvi_serialiser_cfg picodvi_dvi_cfg = {
    .pio = DVI_DEFAULT_PIO_INST,
    .sm_tmds = {0, 1, 2},
    .pins_tmds = {10, 12, 14},
    .pins_clk = 8,
    .invert_diffpairs = true
};
*/
#define PICO_GAME_ENGINE_BOARD_DVI_CONFIG picodvi_dvi_cfg
#elif PICO_GAME_ENGINE_BOARD_TYPE == PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO
#define PICO_GAME_ENGINE_BOARD_MISO 4
#define PICO_GAME_ENGINE_BOARD_CS 5
#define PICO_GAME_ENGINE_BOARD_SCLK 6
#define PICO_GAME_ENGINE_BOARD_MOSI 7
#define PICO_GAME_ENGINE_BOARD_RST 10
#define PICO_GAME_ENGINE_BOARD_DC 11
#define PICO_GAME_ENGINE_BOARD_HEAP_SIZE 256000
#define PICO_GAME_ENGINE_BOARD_FLASH_SIZE 2000000
#define PICO_GAME_ENGINE_BOARD_HAS_WIFI false
#include <TFT_eSPI.h> // Graphics and font library for ILI9341 driver chip
#include <SPI.h>
#elif PICO_GAME_ENGINE_BOARD_TYPE == PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_W
#define PICO_GAME_ENGINE_BOARD_MISO 4
#define PICO_GAME_ENGINE_BOARD_CS 5
#define PICO_GAME_ENGINE_BOARD_SCLK 6
#define PICO_GAME_ENGINE_BOARD_MOSI 7
#define PICO_GAME_ENGINE_BOARD_RST 10
#define PICO_GAME_ENGINE_BOARD_DC 11
#define PICO_GAME_ENGINE_BOARD_HEAP_SIZE 256000
#define PICO_GAME_ENGINE_BOARD_FLASH_SIZE 2000000
#define PICO_GAME_ENGINE_BOARD_HAS_WIFI true
#include <TFT_eSPI.h> // Graphics and font library for ILI9341 driver chip
#include <SPI.h>
#elif PICO_GAME_ENGINE_BOARD_TYPE == PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_2
#define PICO_GAME_ENGINE_BOARD_MISO 4
#define PICO_GAME_ENGINE_BOARD_CS 5
#define PICO_GAME_ENGINE_BOARD_SCLK 6
#define PICO_GAME_ENGINE_BOARD_MOSI 7
#define PICO_GAME_ENGINE_BOARD_RST 10
#define PICO_GAME_ENGINE_BOARD_DC 11
#define PICO_GAME_ENGINE_BOARD_HEAP_SIZE 512000
#define PICO_GAME_ENGINE_BOARD_FLASH_SIZE 4000000
#define PICO_GAME_ENGINE_BOARD_HAS_WIFI false
#include <TFT_eSPI.h> // Graphics and font library for ILI9341 driver chip
#include <SPI.h>
#elif PICO_GAME_ENGINE_BOARD_TYPE == PICO_GAME_ENGINE_BOARD_TYPE_RASPBERRY_PICO_2W
#define PICO_GAME_ENGINE_BOARD_MISO 4
#define PICO_GAME_ENGINE_BOARD_CS 5
#define PICO_GAME_ENGINE_BOARD_SCLK 6
#define PICO_GAME_ENGINE_BOARD_MOSI 7
#define PICO_GAME_ENGINE_BOARD_RST 10
#define PICO_GAME_ENGINE_BOARD_DC 11
#define PICO_GAME_ENGINE_BOARD_HEAP_SIZE 512000
#define PICO_GAME_ENGINE_BOARD_FLASH_SIZE 4000000
#define PICO_GAME_ENGINE_BOARD_HAS_WIFI true
#include <TFT_eSPI.h> // Graphics and font library for ILI9341 driver chip
#include <SPI.h>
#else
#error "Unknown board type"
#endif

// additional colors
// https://doc-tft-espi.readthedocs.io/tft_espi/colors/
#ifndef TFT_BLACK
#define TFT_BLACK 0x0000
#endif

#ifndef TFT_RED
#define TFT_RED 0xF800
#endif

#ifndef TFT_WFITE
#define TFT_WHITE 0xFFFF
#endif